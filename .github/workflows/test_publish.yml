name: Test and publish

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

env:
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  Configuration: Release
  dotnetVersion: '6.x'  # SDK Version to use; x will use the latest version of the 6.0 channel
  slnPath: src/fictional-octo-giggle.sln

jobs:  
  variables:
    name: Create variables
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      ENVIRONMENT: ${{ steps.setoutputvariables.outputs.ENVIRONMENT }}
      NUGETVERSIONV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      FULLSEMVER:  ${{ steps.gitversion.outputs.fullSemVer }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0


      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: '5.x.x'

      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.11

      - name: Set dev environment variable
        uses: allenevans/set-env@v2.1.0
        if: ${{ (startsWith(github.event.workflow_run.head_branch, 'develop') || startsWith(github.event.workflow_run.head_branch, 'feature/') || startsWith(github.ref, 'refs/heads/dependabot/') || github.event_name == 'pull_request_target' }} # deveop, featurebranches and pullrequests
        with:
          ENVIRONMENT: dev          

      - name: Set uat environment variable
        uses: allenevans/set-env@v2.1.0
        if: ${{ (startsWith(github.event.workflow_run.head_branch, 'release/') || startsWith(github.event.workflow_run.head_branch, 'hotfix/') || contains(github.ref, '-beta')}}
        with:
          ENVIRONMENT: uat

      - name: Set pro environment variable
        uses: allenevans/set-env@v2.1.0
        if: ${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'refs/tags/*-*') }}
        with:
          ENVIRONMENT: pro

      - id: setoutputvariables
        name: Set output variables
        run: |
            echo "::set-output name=ENVIRONMENT::${ENVIRONMENT}"

  test:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - uses: haya14busa/action-workflow_run-status@v1
    - name: Checkout
      if: ${{ github.event.workflow_run.event != 'pull_request_target' }}  
      uses: actions/checkout@v2
      
    - name: Checkout pull request target
      if: ${{ github.event.workflow_run.event == 'pull_request_target' }}  
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnetVersion }}

    #- name: Run SDK Unit Tests
    #  run: dotnet test src/SwedbankPay.Sdk.Tests/SwedbankPay.Sdk.Tests.csproj

    #- name: Run SDK Integration Tests
    #  run: dotnet test src/SwedbankPay.Sdk.IntegrationTests/SwedbankPay.Sdk.IntegrationTests.csproj
    #  env:
    #    SwedbankPay:Token: ${{ secrets.MERCHANT_TOKEN }}
    #    SwedbankPay:TokenMobilePay: ${{ secrets.MERCHANT_TOKEN_MOBILE_PAY }}
    #    SwedbankPay:PayeeId: ${{ secrets.MERCHANT_PAYEEID }}

    #- name: Run SDK Sample project tests
    #  run: dotnet test  src/Samples/Sample.AspNetCore.SystemTests/Sample.AspNetCore.SystemTests.csproj -v n
    #  env:
    #    SwedbankPay:Token: ${{ secrets.MERCHANT_TOKEN }}
    #    SwedbankPay:TokenMobilePay: ${{ secrets.MERCHANT_TOKEN_MOBILE_PAY }}
    #    SwedbankPay:PayeeId: ${{ secrets.MERCHANT_PAYEEID }}
    #    SwedbankPay:ApiBaseUrl: https://api.externalintegration.payex.com
    #    SwedbankPay:Sdk:SampleWebsite:BaseUrl: https://localhost:5001

  test_nuget_package:
    runs-on: ubuntu-latest
    needs: [variables]
    if: >
      ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - uses: haya14busa/action-workflow_run-status@v1
    - uses: actions/checkout@v2
      if: ${{ github.event.workflow_run.event != 'pull_request_target' }}
      name: Checkout
      with:
        fetch-depth: 0

    - uses: actions/checkout@v2
      if: ${{ github.event.workflow_run.event == 'pull_request_target' }}  
      name: Checkout pull request target
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: '5.x.x'

    - uses: gittools/actions/gitversion/execute@v0.9.11
      id: gitversion # step id used as reference for output values
      with:
        updateAssemblyInfo: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnetVersion }}

    - name: Install dependencies
      run: dotnet restore ${{ env.slnPath }}

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnetVersion }}

    - name: Build solution
      run: dotnet build ${{ env.slnPath }}

    #- name: Create test NuGet package
    #  env:
    #    SLN_FILE: ${{ env.slnPath }}
    #    VERSION_NUMBER: ${{ steps.gitversion.outputs.FULLSEMVER }}
    #    NUGET_KEY: not-needed
    #    DEBUG: true
    #  run: .github/workflows/nuget_push.sh

    #- name: Publish test package to GitHub Package Registry
    #  run: dotnet nuget push "nugets/*.nupkg" --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/zunkas/index.json --skip-duplicate

    #- name: Publish test symbol package to GitHub Package Registry
    #  run: dotnet nuget push "nugets/*.snupkg" --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/zunkas/index.json --skip-duplicate

    #- name: Setup nuget config
    #  run: awk '{gsub("GITHUB_USER", "${{ github.actor }}"); print}' NuGet.template.config | awk '{gsub("GITHUB_TOKEN", "${{ secrets.GITHUB_TOKEN }}"); print}' $1 | tee NuGet.Config
    #  working-directory: src/SwedbankPay.Sdk.TestNuget

    #- name: Print nuget config
    #  run: cat src/SwedbankPay.Sdk.TestNuget/NuGet.Config

    #- name: Test install of package
    #  env:
    #    PROJECT_FILE: src/SwedbankPay.Sdk.TestNuget/SwedbankPay.Sdk.TestNuget.csproj
    #    VERSION_NUMBER: ${{ steps.gitversion.outputs.FULLSEMVER }}
    #  run: .github/workflows/nuget_install.sh

    #- name: Print csproj
    #  run: cat src/SwedbankPay.Sdk.TestNuget/SwedbankPay.Sdk.TestNuget.csproj

    #- name: Build SwedbankPay.Sdk.TestNuget
    #  run: dotnet build src/SwedbankPay.Sdk.TestNuget/SwedbankPay.Sdk.TestNuget.csproj

  publish:
    if: ${{ github.event.workflow_run.event == 'push' && (startsWith(github.event.workflow_run.head_branch, 'develop') || startsWith(github.event.workflow_run.head_branch, 'release/') || startsWith(github.event.workflow_run.head_branch, 'hotfix/') || startsWith(github.ref, 'refs/tags/')) }}
    needs: [variables, test]
    uses: zunkas/fictional-octo-giggle/.github/workflows/DeployToAzure.yml@develop    
    with:
      ENVIRONMENT: ${{ needs.variables.outputs.ENVIRONMENT }}
      packageName: 'Sample.AspNetCore'
    secrets:
      azureWebAppName: ${{ secrets.AZURE_WEBAPP_NAME }}
      azurePublishProfile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
 
  publishToNuget:
    needs: [variables, test, publish]  
    if: ${{ github.event.workflow_run.event != 'pull_request' || startsWith(github.ref, 'refs/heads/develop') }}
    environment: ${{ needs.variables.outputs.ENVIRONMENT }}   
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    #- name: Download All artifacts
    #  uses: actions/download-artifact@v2

    #- name: Publish to NuGet
    #  if: startsWith(github.ref, 'refs/tags/') # Only publish tagged commits
    #  env:
    #    SLN_FILE: ${{ env.slnPath }}
    #    VERSION_NUMBER: ${{ needs.variables.outputs.FULLSEMVER }}
    #    NUGET_KEY: ${{ secrets.NUGET_KEY}}
    #    DEBUG: true
    #    PUBLISH: true
    #  run: .github/workflows/nuget_push.sh